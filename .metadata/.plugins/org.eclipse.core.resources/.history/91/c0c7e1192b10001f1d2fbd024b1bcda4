package com.kh.thenolja.event.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.kh.thenolja.event.model.service.EventService;
import com.kh.thenolja.event.model.vo.Event;
import com.kh.thenolja.notice.model.vo.Notice;

@Controller
public class EventController {

	
	
	@Autowired
	EventService eventSvc;
	
	
    /* 이벤트목록 조회 */
	@RequestMapping("event.list")
	public String eventList(@RequestParam(value="page", defaultValue="1")
							  int page, Model model) {
		
		System.out.println("[EventController eventlist]");
		// ## TO DO : 이벤트 리스트 조회	
		
		List<Event> eventlist = new ArrayList<Event>(); 
		
		// 3. Event변수에 결과를 담아줌.
		//eventlist = eventSvc.selectEventlist(pi);
		eventlist = eventSvc.selectEventlist();
		
		// 4. Model에 결과를 담아서 보내줘야 view(jsp)에서 변수로 활용할 수 있음.
		model.addAttribute("eventList", eventlist);
		//model.addAttribute("pageInfo",pi);
		
		return "event/eventList";
	
	}
	
	/* 이벤트 등록페이지로 이동 */
	@RequestMapping("event.regForm")
	public String noticeRegForm() {
		return "event/eventReg";
	}
	
	/* 이벤트 신규 등록하기 */
	@RequestMapping("notice.regInfo")
	public String noticeRegInfo(Notice nt, Model model) {
		System.out.println("[Noticecontroller noticeRegInfo]");
		System.out.println(nt);
		
		int regCnt = 0;
		// 공지사항 등록
		regCnt = notiSvc.regNotice(nt);
		System.out.println(regCnt);
		
		if(regCnt > 0) {
			model.addAttribute("res", "SUCCESS");
			return "redirect:notice.list";
		}else {
			model.addAttribute("errorMsg", "게시글 등록 중 오류가 발생하였습니다.");
			return "common/errorPage";
		}
		
	}
	
	
	/* 공지사항 상세내용 조회 (수정, 상세페이지 공통)*/
	@RequestMapping("selectUpdate.event")
	public String eventUpdForm(@RequestParam("eventNo") int eventNo, 
								@RequestParam("flag") String flag,
								Model modle) {
		System.out.println("[EventController eventUpdForm eventNo, flag] " 
								+ eventNo + ", " + flag);

		String redirectUrl = "";
		Event ets = new Event();
		ets = eventSvc.selectEventOne(eventNo, flag);
		
		// 수정, 상세페이지에서 조회내용 보여줄 때 사용할 모델명
		modle.addAttribute("eventOne", ets);
		
		// "noticeList.jsp에서 파라미터로 넘겨준 flag값이 Y이면 수정페이지, N이면 상세페이지로 redirect해줌.
		if("Y".equals(flag)) {
			redirectUrl = "event/eventUpd";
		}else {
			redirectUrl = "event/eventDetail";
		}
		
		
		return redirectUrl;
	}
	
	
	
	
}
